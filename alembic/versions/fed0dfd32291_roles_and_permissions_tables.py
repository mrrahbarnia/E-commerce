"""roles and permissions tables

Revision ID: fed0dfd32291
Revises: a29b79f72335
Create Date: 2025-04-27 08:47:30.531778

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fed0dfd32291'
down_revision: Union[str, None] = 'a29b79f72335'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_permissions')),
    sa.UniqueConstraint('name', name='uq_permission_name')
    )
    op.create_table('sellers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('company_name', sa.String(length=200), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('is_founder', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_sellers_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sellers'))
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('seller_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['seller_id'], ['sellers.id'], name=op.f('fk_roles_seller_id_sellers'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_roles')),
    sa.UniqueConstraint('seller_id', 'name', name='uq_role_seller_name')
    )
    op.create_index(op.f('ix_roles_seller_id'), 'roles', ['seller_id'], unique=False)
    op.create_table('role_permissions',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], name=op.f('fk_role_permissions_permission_id_permissions'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name=op.f('fk_role_permissions_role_id_roles'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('role_id', 'permission_id', name=op.f('pk_role_permissions'))
    )
    op.create_index(op.f('ix_role_permissions_permission_id'), 'role_permissions', ['permission_id'], unique=False)
    op.create_index(op.f('ix_role_permissions_role_id'), 'role_permissions', ['role_id'], unique=False)
    op.create_table('seller_staff',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('seller_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name=op.f('fk_seller_staff_role_id_roles'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['seller_id'], ['sellers.id'], name=op.f('fk_seller_staff_seller_id_sellers'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_seller_staff_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_seller_staff'))
    )
    op.create_index(op.f('ix_seller_staff_seller_id'), 'seller_staff', ['seller_id'], unique=False)
    op.create_index(op.f('ix_seller_staff_user_id'), 'seller_staff', ['user_id'], unique=False)
    op.create_table('staff_permissions',
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], name=op.f('fk_staff_permissions_permission_id_permissions'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['staff_id'], ['seller_staff.id'], name=op.f('fk_staff_permissions_staff_id_seller_staff'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('staff_id', 'permission_id', name=op.f('pk_staff_permissions'))
    )
    op.create_index(op.f('ix_staff_permissions_permission_id'), 'staff_permissions', ['permission_id'], unique=False)
    op.create_index(op.f('ix_staff_permissions_staff_id'), 'staff_permissions', ['staff_id'], unique=False)
    op.create_index(op.f('ix_user_identities_identity_value'), 'user_identities', ['identity_value'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_identities_identity_value'), table_name='user_identities')
    op.drop_index(op.f('ix_staff_permissions_staff_id'), table_name='staff_permissions')
    op.drop_index(op.f('ix_staff_permissions_permission_id'), table_name='staff_permissions')
    op.drop_table('staff_permissions')
    op.drop_index(op.f('ix_seller_staff_user_id'), table_name='seller_staff')
    op.drop_index(op.f('ix_seller_staff_seller_id'), table_name='seller_staff')
    op.drop_table('seller_staff')
    op.drop_index(op.f('ix_role_permissions_role_id'), table_name='role_permissions')
    op.drop_index(op.f('ix_role_permissions_permission_id'), table_name='role_permissions')
    op.drop_table('role_permissions')
    op.drop_index(op.f('ix_roles_seller_id'), table_name='roles')
    op.drop_table('roles')
    op.drop_table('sellers')
    op.drop_table('permissions')
    # ### end Alembic commands ###
